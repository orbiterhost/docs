openapi: 3.0.3
info:
  title: Orbiter API
  description: "Welcome to the Orbiter API! With this API you can deploy and manage your sites on Orbiter programmatically. These docs are still a work in progress so please [reach out](https://mailto:steve@orbiter.host,justin@orbiter.host) if you have any issues!\n\n## Quickstart\n\nFirst obtain an API key from [app.orbiter.host/api-keys](https://app.orbiter.host/api-keys). Click on the `New Key` button in the top right and select your scope and a name. The permissions for each scope are currently:\n\n- Member - create site, update site\n    \n- Admin - create site, update site, delete site, manage  \n    domains, add teammates, remove teammates,  \n    manage billing\n    \n\nOnce you create your key you will only see it once, so copy it somewhere safe! All API request use the following header with your API key:\n\n```\nX-Orbiter-API-Key: <YOUR-ORBITER-API-KEY>\n\n ```\n\nTry using this cURL request with your API key to test it:\n\n``` bash\ncurl --location 'https://api.orbiter.host/sites' \\\n--header 'Content-Type: application/json' \\\n--header 'X-Orbiter-API-Key: YOUR-API-KEY'\n\n ```\n\nIf you already have some sites you should see them in the response!"
  version: 1.0.0
  contact: {}
servers:
- url: https://api.orbiter.host
paths:
  /sites:
    get:
      tags:
      - Sites
      summary: List Sites
      description: |-
        You can list sites on your account using `GET /sites` and filter them by subdomain if needed

        ``` typescript
        const sitesReq = await fetch("https://api.orbiter.host/sites?domain=my-site", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          }
        })
        const sites = await req.json()
        ```
      operationId: listSites
      parameters:
        - in: query
          name: domain
          schema:
            type: string
          description: Filter sites by domain
      responses:
        '200':
          description: List Sites
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        cid:
                          type: string
                          example: bafybeieerpzkivypgebfqbd4hnocvw4gkn3rurl2fyb2cjj6l36dciuf6i
                        created_at:
                          type: string
                          example: 2025-01-06T16:29:51.160257+00:00
                        custom_domain:
                          type: string
                          nullable: true
                          example: stevedylan.dev
                        deployed_by:
                          type: string
                          example: f5735334-738c-4d48-a324-226ac182a08b
                        domain:
                          type: string
                          example: stevedylandev.orbiter.website
                        domain_ownership_verified:
                          type: boolean
                          nullable: true
                          example: true
                        id:
                          type: string
                          example: 9184591a-9413-4fb3-9b81-a0c01ea4eaa3
                        organization_id:
                          type: string
                          example: 91c9264f-c932-4f3f-b792-744730b56957
                        site_contract:
                          type: string
                          example: 0xEDC05065d068bBaCB2AAE16Fc620F4bee466b1b9
                        ssl_issued:
                          type: boolean
                          nullable: true
                          example: true
                        updated_at:
                          type: string
                          example: 2025-01-06T16:29:51.160257+00:00
                    example:
                    - cid: bafybeieerpzkivypgebfqbd4hnocvw4gkn3rurl2fyb2cjj6l36dciuf6i
                      created_at: 2025-01-06T16:29:51.160257+00:00
                      custom_domain: stevedylan.dev
                      deployed_by: f5735334-738c-4d48-a324-226ac182a08b
                      domain: stevedylandev.orbiter.website
                      domain_ownership_verified: true
                      id: 9184591a-9413-4fb3-9b81-a0c01ea4eaa3
                      organization_id: 91c9264f-c932-4f3f-b792-744730b56957
                      site_contract: 0xEDC05065d068bBaCB2AAE16Fc620F4bee466b1b9
                      ssl_issued: true
                      updated_at: 2025-01-06T16:29:51.160257+00:00
              examples:
                List Sites:
                  value:
                    data:
                    - cid: bafybeieerpzkivypgebfqbd4hnocvw4gkn3rurl2fyb2cjj6l36dciuf6i
                      created_at: 2025-01-06T16:29:51.160257+00:00
                      custom_domain: stevedylan.dev
                      deployed_by: f5735334-738c-4d48-a324-226ac182a08b
                      domain: stevedylandev.orbiter.website
                      domain_ownership_verified: true
                      id: 9184591a-9413-4fb3-9b81-a0c01ea4eaa3
                      organization_id: 91c9264f-c932-4f3f-b792-744730b56957
                      site_contract: 0xEDC05065d068bBaCB2AAE16Fc620F4bee466b1b9
                      ssl_issued: true
                      updated_at: 2025-01-06T16:29:51.160257+00:00
    post:
      tags:
      - Sites
      summary: Create Site
      description: |-
        Creating a site requires a CID and the subdomain you want to use in `.orbiter.website`. To get a CID you can use the `/keys/upload_key` API route to generate a one time use key for Pinata. Here is an example code snippet on the flow

        ``` typescript
        import { PinataSDK } from "pinata-web3"

        const pinata = new PinataSDK({
          pinataJwt: "",
          pinataGateway: ""
        })

        const keyReq = await fetch("https://api.orbiter.host/keys/upload_key", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          },
          body: null
        })

        const keyRes = await keyReq.json()
        const files: File[] = [] // Get a folder of files either locally or through a front end
        const upload = await pinata.upload.fileArray(files).key(keyRes.data)

        const deploySite = await fetch("https://api.orbiter.host/sites", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          },
          body: JSON.stringify({
            cid: upload.IpfsHash,
            subdomain: "my-site"
          })
        })

         ```
      operationId: createSite
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cid:
                  type: string
                  example: bafybeifhp4bi22dq3cslzoana774ahxs4abaevik2zjd33645hhz2mzyia
                subdomain:
                  type: string
                  example: my-next-site
            examples:
              Create Site:
                value:
                  cid: bafybeifhp4bi22dq3cslzoana774ahxs4abaevik2zjd33645hhz2mzyia
                  subdomain: my-next-site
      responses:
        '200':
          description: Create Site
      security:
      - X-Orbiter-API-Key: []
  /sites/{siteId}:
    put:
      tags:
      - Sites
      summary: Update Site
      description: |-
        Using a `siteId` you can update an existing site by providing a new CID for the website content. This requires uploading the new site and the making another request with the CID.

        ```typescript
        import { PinataSDK } from "pinata-web3"

        const pinata = new PinataSDK({
          pinataJwt: "",
          pinataGateway: ""
        })

        const keyReq = await fetch("https://api.orbiter.host/keys/upload_key", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          },
          body: null
        })

        const keyRes = await keyReq.json()
        const files: File[] = [] // Get a folder of files either locally or through a front end
        const upload = await pinata.upload.fileArray(files).key(keyRes.data)

        const siteId = "36a7cbd9-4d48-4f4c-90f2-557299bf917f" // Can be obtains with GET /sites?domain=my=site

        const updateSite = await fetch(`https://api.orbiter.host/sites/${siteId}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          },
          body: JSON.stringify({
            cid: upload.IpfsHash,
          })
        })
         ```
      operationId: updateSite
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cid:
                  type: string
                  example: bafybeifhp4bi22dq3cslzoana774ahxs4abaevik2zjd33645hhz2mzyia
            examples:
              Update Site:
                value:
                  cid: bafybeifhp4bi22dq3cslzoana774ahxs4abaevik2zjd33645hhz2mzyia
      responses:
        '200':
          description: Update Site
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
              examples:
                Update Site:
                  value:
                    message: Success
    delete:
      tags:
      - Sites
      summary: Delete Site
      description: |-
        Using a `siteId` you can delete a site from your account

        ```typescript
        const siteId = "36a7cbd9-4d48-4f4c-90f2-557299bf917f" // Can be obtains with GET /sites?domain=my=site

        const deleteSite = await fetch(`https://api.orbiter.host/sites/${siteId}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          }
        })
        ```
      operationId: deleteSite
      responses:
        '200':
          description: Delete Site
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
              examples:
                Delete Site:
                  value:
                    message: Success
    parameters:
    - name: siteId
      in: path
      required: true
      schema:
        type: string
        example: f20a57d0-2465-4621-a283-5b7d7c0306d3
  /keys/upload_key:
    post:
      tags:
      - Keys
      summary: Upload Key
      description: |-
        All sites on Orbiter are hosted on IPFS through [Pinata](https://pinata.cloud), so all site deployments require a CID as a reference to the content. Orbiter has created an API route you can use to generate a temporary one-time use API key to upload a website folder.

        ``` typescript
        import { PinataSDK } from "pinata-web3"

        const pinata = new PinataSDK({
          pinataJwt: "",
          pinataGateway: ""
        })

        const keyReq = await fetch("https://api.orbiter.host/keys/upload_key", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          },
          body: null
        })

        const keyRes = await keyReq.json()
        const files: File[] = [] // Get a folder of files either locally or through a front end
        const upload = await pinata.upload.fileArray(files).key(keyRes.data)

        const deploySite = await fetch("https://api.orbiter.host/sites", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Orbiter-API-Key": "<YOUR-API-KEY>"
          },
          body: JSON.stringify({
            cid: upload.IpfsHash,
            subdomain: "my-site"
          })
        })
        ```
      operationId: uploadKey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Upload Key:
                value: {}
      responses:
        '200':
          description: Upload Key
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: REDACTED
              examples:
                Upload Key:
                  value:
                    data: REDACTED
components:
  securitySchemes:
    X-Orbiter-API-Key:
      type: apiKey
      name: X-Orbiter-API-Key
      in: header
security:
- X-Orbiter-API-Key: []
tags:
- name: Sites
- name: Keys
